
AUTOMAKE_OPTIONS = foreign
BUILDDIR := ../build

CFLAGS?=-Wall -Wno-switch -ggdb -fPIC $(EXTRA_CFLAGS)
LDFLAGS?=-lpthread 

OS := $(shell $(CC) -v 2>&1 | grep Target | sed 's/Target: //' | cut -d- -f 2)
ARCH := $(shell $(CC) -v 2>&1 | grep Target | sed 's/Target: //' | cut -d- -f 1)

ifneq ($(UNAME_S),apple)
        LDFLAGS += -lrt
else
	LINUXDVB=0
endif

SOURCES=\
	test_adapter.c \
	test_opts.c \
	test_ca.c \
	test_pmt.c \
	test_ddci.c \
	test_dvb.c \
	test_minisatip.c \
	test_utils.c \
	test_socketworks.c \
	utils/test_hash_table.c \
	utils/test_utils.c

MAIN_SOURCES=$(shell find ../src -type f -iname '*.c')

TABLES=0
PMT=0

LIBS+=crypto dl pthread
LIBS+=dvbcsa
CFLAGS += -DAXE
CFLAGS += -fsanitize=address -fno-omit-frame-pointer -fsanitize=leak -fsanitize=null
CFLAGS += -I../src

CFLAGS += -DENIGMA
CFLAGS += -DTESTING
CFLAGS += -DDDCI_TEST
CFLAGS += -DDISABLE_NETCVCLIENT
CFLAGS += -DVERSION=\"tests\"

LDFLAGS+=$(addprefix -l,$(LIBS))

BINS := $(patsubst %.c, $(BUILDDIR)/%, $(SOURCES))

test: $(BINS)
	@echo "Tests completed successfully"

$(BUILDDIR)/%.d : %.c
	@mkdir -p $(dir $@)
	@$(CC) $(CFLAGS) -MM $(basename $*).c | sed -e 's@^\(.*\)\.o:@\1.d \1.o:@' > $@

$(BUILDDIR)/% : %.c
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) $*.c $(MAIN_SOURCES) -o $(BUILDDIR)/test $(LDFLAGS)
	@echo "Running $@"
	@$(BUILDDIR)/test
	@rm -f $(BUILDDIR)/test

clean:
	rm -rf $(BUILDDIR) $(TARGET) >> /dev/null

# pull in dependency info for *existing* .o files
ifneq "$(MAKECMDGOALS)" "clean"
-include $(DEPS)
endif
